#!/usr/bin/python3
"""File Storage Class"""
""" task 5"""

import json
import os.path
from models.base_model import BaseModel
from models.user import User
from models.state import State
from models.amenity import Amenity
from models.place import Place
from models.review import Review

class FileStorage:
    """public instance attrs for FileStorage"""

    __file_path = 'file.json'
    __objects = {}

    def all(self):
        """ returns the objects dictionary """
        return FileStorage.__objects

    def new(self, obj):
        """ creates a new dictionary of object """
        key = "{}.{}".format(type(obj).__name__, obj.id)
        FileStorage.__objects[key] = obj

    def save(self):
        """serializes the objects dictionary to json and writes to file"""
        new_dict = {}
        for key, value in self.__objects.items():
            new_dict[key] = value.to_dict()
        with open(FileStorage.__file_path, mode="w",
                  encoding="UTF-8") as json_file:
            json.dump(new_dict, json_file)

    def reload(self):
        """ deserializes json from file to dictionary """
        try:
            with open(FileStorage.__file_path, mode="r",
                      encoding="UTF-8") as to_file:
                obj_load = json.load(to_file)
                from models.base_model import BaseModel
                from models.amenity import Amenity
                from models.city import City
                from models.place import Place
                from models.review import Review
                from models.state import State
                from models.user import User

                class_list = ["BaseModel", "Amenity", "City", "Place",
                              "Review", "State", "User"]
                for key, value in obj_load.items():
                    if value.get("__class__") in class_list:

